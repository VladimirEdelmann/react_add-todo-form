{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","img/completed.png","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","helpers/helpers.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","description","completed","useState","isTodoCompleted","setIsTodoCompleted","cn","toUpperCase","src","completedIcon","alt","onClick","TodoList","todos","map","getUserById","userId","usersFromServer","find","todosWithUser","App","setTodos","setTitle","setDescription","setUserId","titleErrorMessage","setTitleErrorMessage","userErrorMessage","setUserErrorMessage","showTitleError","setShowTitleError","showUserError","setShowUserError","Grid","container","spacing","direction","alignItems","justifyContent","style","minHeight","action","method","onSubmit","event","preventDefault","prev","arr","newTodo","Math","max","FormControl","sx","width","TextField","label","variant","placeholder","value","onChange","target","error","helperText","mt","InputLabel","Select","handleSelectChange","MenuItem","disabled","userFromServer","FormHelperText","Container","textAlign","Button","type","ReactDOM","render","document","getElementById"],"mappings":"iSAAe,G,MAAA,CACb,CACEA,GAAI,EACJC,KAAM,gBACNC,SAAU,OACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,eACNC,SAAU,YACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,sBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,6BAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,SACVC,MAAO,4BAET,CACEH,GAAI,EACJC,KAAM,uBACNC,SAAU,mBACVC,MAAO,2BAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,eACVC,MAAO,0BAET,CACEH,GAAI,EACJC,KAAM,2BACNC,SAAU,gBACVC,MAAO,wBAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,WACVC,MAAO,2BAET,CACEH,GAAI,GACJC,KAAM,qBACNC,SAAU,iBACVC,MAAO,4B,wBCpDEC,EAAsB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACpC,OACE,mBAAGC,UAAU,WAAWC,KAAI,iBAAYF,EAAKF,OAA7C,SACGE,EAAKJ,QCVG,MAA0B,sCCc5BO,EAAsB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAElCT,EAKES,EALFT,GACAU,EAIED,EAJFC,MACAC,EAGEF,EAHFE,YACAC,EAEEH,EAFFG,UACAP,EACEI,EADFJ,KAGF,EAA8CQ,mBAASD,GAAvD,mBAAOE,EAAP,KAAwBC,EAAxB,KAEA,OACE,0BACE,UAASf,EACTM,UACEU,IAAG,WAAY,CAAE,sBAAuBF,IAH5C,UAME,oBAAIR,UAAU,kBAAd,SACGI,EAAMO,gBAGT,mBAAGX,UAAU,wBAAb,SACGK,IAIDN,GAAS,cAAC,EAAD,CAAUA,KAAMA,IAG3B,qBAEEa,IAAKC,EACLC,IAAI,iBACJd,UAAU,gBACVe,QAAS,kBAAMN,GAAoBD,KAJ9Bd,OCpCAsB,EAAsB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACpC,OACE,yBAASjB,UAAU,WAAnB,SAEIiB,EAAMC,KAAI,SAAAf,GAAI,OAAI,cAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAKT,UCUxCyB,EAAc,SAACC,GACnB,OAAOC,EAAgBC,MAAK,SAAAvB,GAAI,OAAIA,EAAKL,KAAO0B,MAAW,MAGvDG,EC3BS,CACb,CACE7B,GAAI,EACJU,MAAO,qBACPE,WAAW,EACXc,OAAQ,GAEV,CACE1B,GAAI,GACJU,MAAO,kBACPE,WAAW,EACXc,OAAQ,GAEV,CACE1B,GAAI,EACJU,MAAO,qCACPE,WAAW,EACXc,OAAQ,IDUkCF,KAAI,SAAAf,GAAI,kCACjDA,GADiD,IAEpDJ,KAAMoB,EAAYhB,EAAKiB,aAGZI,EAAU,WACrB,MAA0BjB,mBAASgB,GAAnC,mBAAON,EAAP,KAAcQ,EAAd,KACA,EAA0BlB,mBAAS,IAAnC,mBAAOH,EAAP,KAAcsB,EAAd,KACA,EAAsCnB,mBAAS,IAA/C,mBAAOF,EAAP,KAAoBsB,EAApB,KACA,EAA4BpB,mBAAS,GAArC,mBAAOa,EAAP,KAAeQ,EAAf,KAEA,EAGIrB,mBAAS,IAHb,mBACEsB,EADF,KAEEC,EAFF,KAIA,EAGIvB,mBAAS,IAHb,mBACEwB,EADF,KAEEC,EAFF,KAKA,EAA4CzB,oBAAS,GAArD,mBAAO0B,EAAP,KAAuBC,EAAvB,KACA,EAA0C3B,oBAAS,GAAnD,mBAAO4B,EAAP,KAAsBC,EAAtB,KAkEA,OACE,qBAAKpC,UAAU,MAAf,SACE,eAACqC,EAAA,EAAD,CACEC,WAAS,EACTC,QAAS,EACTC,UAAU,SACVC,WAAW,SACXC,eAAe,SACfC,MAAO,CAAEC,UAAW,QANtB,UAQE,+CAEA,uBACEC,OAAO,aACPC,OAAO,OACPC,SAvEa,SAACC,GAGpB,GAFAA,EAAMC,kBAED7C,IAAUgB,EAOb,OANAU,EAAsB1B,EAAiC,GAAzB,wBAC9B4B,EAAqBZ,EAAkC,GAAzB,wBAE9Bc,GAAmB9B,QACnBgC,GAAkBhB,GAKpBK,GAAS,SAAAyB,GACP,IExEmBC,EFwEbC,EAAU,CACd1D,IEzEiByD,EFyEJD,EExEnBG,KAAKC,IAAL,MAAAD,KAAI,YAAQF,EAAIjC,KAAI,SAAAf,GAAI,OAAIA,EAAKT,QAAO,GFyElCU,QACAC,cACAC,WAAW,EACXc,SACArB,KAAMoB,EAAYC,IAGpB,MAAM,GAAN,mBAAW8B,GAAX,CAAiBE,OA9BnB1B,EAAS,IACTC,EAAe,IACfC,EAAU,GACVM,GAAkB,GAClBE,GAAiB,IAuEb,UAKE,cAACmB,EAAA,EAAD,CACEvD,UAAU,QACVwD,GAAI,CAAEC,MAAO,KAFf,SAIE,cAACC,EAAA,EAAD,CACEhE,GAAG,aACHiE,MAAM,SACNC,QAAQ,WACR,UAAQ,aACRC,YAAY,gBACZC,MAAO1D,EACP2D,SAvDc,SAACf,GACrB5C,IACF0B,EAAqB,IACrBI,GAAmB9B,IAGrBsB,EAASsB,EAAMgB,OAAOF,QAkDZG,MAAOhC,EACPiC,WAAYrC,MAGhB,uBAEA,cAAC0B,EAAA,EAAD,CACEvD,UAAU,QACVwD,GAAI,CAAEW,GAAI,EAAGV,MAAO,KAFtB,SAIE,cAACC,EAAA,EAAD,CACEhE,GAAG,mBACHiE,MAAM,eACNC,QAAQ,WACRC,YAAY,sBACZC,MAAOzD,EACP0D,SA/DoB,SAC9Bf,GAEArB,EAAeqB,EAAMgB,OAAOF,YA+DtB,uBAEA,eAACP,EAAA,EAAD,CACEvD,UAAU,QACVwD,GAAI,CAAEW,GAAI,EAAGV,MAAO,KACpBQ,MAAO9B,EAHT,UAKE,cAACiC,EAAA,EAAD,oBACA,eAACC,EAAA,EAAD,CACE3E,GAAG,YACHiE,MAAM,QACN,UAAQ,aACRG,MAAO1C,EACP2C,SAAU,SAACf,GAAD,OAzEK,SACzBA,GAEK5B,IACHY,EAAoB,IACpBI,GAAiB,IAGnBJ,EAAoB,IACpBJ,GAAWoB,EAAMgB,OAAOF,OAgEOQ,CAAmBtB,IAL1C,UAOE,cAACuB,EAAA,EAAD,CAAUT,MAAO,EAAGU,UAAQ,EAA5B,SACE,iDAGAnD,EAAgBH,KAAI,SAAAuD,GAAc,OAChC,cAACF,EAAA,EAAD,CAEET,MAAOW,EAAe/E,GAFxB,SAIG+E,EAAe9E,MAHX8E,EAAe/E,UAQ5B,cAACgF,EAAA,EAAD,UACG3C,OAIL,cAAC4C,EAAA,EAAD,CAAWnB,GAAI,CAAEoB,UAAW,UAA5B,SACE,cAACC,EAAA,EAAD,CACEC,KAAK,SACLlB,QAAQ,YACR,UAAQ,eAHV,sBAUJ,cAAC,EAAD,CAAU3C,MAAOA,UG5MzB8D,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.2aea0baf.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { FC } from 'react';\nimport { User } from '../../react-app-env';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/completed.8e4c75c6.png\";","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport { FC, useState } from 'react';\n\nimport cn from 'classnames';\nimport { Todo } from '../../react-app-env';\nimport { UserInfo } from '../UserInfo';\n\nimport completedIcon from '../../img/completed.png';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoInfo: FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    description,\n    completed,\n    user,\n  } = todo;\n\n  const [isTodoCompleted, setIsTodoCompleted] = useState(completed);\n\n  return (\n    <article\n      data-id={id}\n      className={\n        cn('TodoInfo', { 'TodoInfo--completed': isTodoCompleted })\n      }\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title.toUpperCase()}\n      </h2>\n\n      <p className=\"TodoInfo__description\">\n        {description}\n      </p>\n\n      {\n        user && (<UserInfo user={user} />)\n      }\n\n      <img\n        key={id}\n        src={completedIcon}\n        alt=\"Completed icon\"\n        className=\"TodoInfo__img\"\n        onClick={() => setIsTodoCompleted(!isTodoCompleted)}\n      />\n    </article>\n  );\n};\n","import { FC } from 'react';\nimport { TodoInfo } from '../TodoInfo';\n\nimport { Todo } from '../../react-app-env';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {\n        todos.map(todo => <TodoInfo key={todo.id} todo={todo} />)\n      }\n    </section>\n  );\n};\n","import React, { FC, useState } from 'react';\n\nimport {\n  Container,\n  Grid,\n  TextField,\n  InputLabel,\n  Select,\n  MenuItem,\n  FormHelperText,\n  FormControl,\n  Button,\n} from '@mui/material';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { TodoList } from './components/TodoList';\n\nimport { getNewId } from './helpers/helpers';\nimport { User, Todo } from './react-app-env';\n\nconst getUserById = (userId: number): User | null => {\n  return usersFromServer.find(user => user.id === userId) || null;\n};\n\nconst todosWithUser: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App: FC = () => {\n  const [todos, setTodos] = useState(todosWithUser);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [userId, setUserId] = useState(0);\n\n  const [\n    titleErrorMessage,\n    setTitleErrorMessage,\n  ] = useState('');\n  const [\n    userErrorMessage,\n    setUserErrorMessage,\n  ] = useState('');\n\n  const [showTitleError, setShowTitleError] = useState(false);\n  const [showUserError, setShowUserError] = useState(false);\n\n  const reset = () => {\n    setTitle('');\n    setDescription('');\n    setUserId(0);\n    setShowTitleError(false);\n    setShowUserError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!title || !userId) {\n      setTitleErrorMessage(!title ? 'Please enter a title' : '');\n      setUserErrorMessage(!userId ? 'Please choose a user' : '');\n\n      setShowTitleError(!title);\n      setShowUserError(!userId);\n\n      return;\n    }\n\n    setTodos(prev => {\n      const newTodo = {\n        id: getNewId(prev),\n        title,\n        description,\n        completed: false,\n        userId,\n        user: getUserById(userId),\n      };\n\n      return [...prev, newTodo];\n    });\n\n    reset();\n  };\n\n  const handleChangeTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (title) {\n      setTitleErrorMessage('');\n      setShowTitleError(!title);\n    }\n\n    setTitle(event.target.value);\n  };\n\n  const handleChangeDescription = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setDescription(event.target.value);\n  };\n\n  const handleSelectChange = (\n    event: React.SelectChangeEvent<HTMLSelectElement>,\n  ) => {\n    if (!userId) {\n      setUserErrorMessage('');\n      setShowUserError(false);\n    }\n\n    setUserErrorMessage('');\n    setUserId(+event.target.value);\n  };\n\n  return (\n    <div className=\"App\">\n      <Grid\n        container\n        spacing={0}\n        direction=\"column\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        style={{ minHeight: '10vh' }}\n      >\n        <h1>Add todo form</h1>\n\n        <form\n          action=\"/api/users\"\n          method=\"POST\"\n          onSubmit={handleSubmit}\n        >\n          <FormControl\n            className=\"field\"\n            sx={{ width: 400 }}\n          >\n            <TextField\n              id=\"titleInput\"\n              label=\"Title:\"\n              variant=\"outlined\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={handleChangeTitle}\n              error={showTitleError}\n              helperText={titleErrorMessage}\n            />\n          </FormControl>\n          <br />\n\n          <FormControl\n            className=\"field\"\n            sx={{ mt: 2, width: 400 }}\n          >\n            <TextField\n              id=\"descriptionInput\"\n              label=\"Description:\"\n              variant=\"outlined\"\n              placeholder=\"Enter a description\"\n              value={description}\n              onChange={handleChangeDescription}\n            />\n          </FormControl>\n          <br />\n\n          <FormControl\n            className=\"field\"\n            sx={{ mt: 2, width: 400 }}\n            error={showUserError}\n          >\n            <InputLabel>User:</InputLabel>\n            <Select\n              id=\"userInput\"\n              label=\"User:\"\n              data-cy=\"userSelect\"\n              value={userId}\n              onChange={(event) => handleSelectChange(event)}\n            >\n              <MenuItem value={0} disabled>\n                <em>Choose a user</em>\n              </MenuItem>\n              {\n                usersFromServer.map(userFromServer => (\n                  <MenuItem\n                    key={userFromServer.id}\n                    value={userFromServer.id}\n                  >\n                    {userFromServer.name}\n                  </MenuItem>\n                ))\n              }\n            </Select>\n            <FormHelperText>\n              {userErrorMessage}\n            </FormHelperText>\n          </FormControl>\n\n          <Container sx={{ textAlign: 'center' }}>\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              data-cy=\"submitButton\"\n            >\n              Add\n            </Button>\n          </Container>\n        </form>\n\n        <TodoList todos={todos} />\n      </Grid>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","export const getNewId = (arr: { id: number }[]) => (\n  Math.max(...arr.map(todo => todo.id)) + 1\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}